[phases.setup]
nixPkgs = ["...", "python311Packages.supervisor", "phpExtensions.redis"]

[phases.build]
cmds = [
    "mkdir -p /etc/supervisor/conf.d/",
    "mkdir -p /run",
    "mkdir -p /var/log",
    "cp /assets/worker-*.conf /etc/supervisor/conf.d/",
    "cp /assets/supervisord.conf /etc/supervisord.conf",
    "cp /assets/php-fpm.conf /etc/php-fpm.conf",
    "chmod +x /assets/start.sh",

    # Create storage directories with proper permissions
    "mkdir -p /app/storage/logs",
    "mkdir -p /app/storage/framework/cache",
    "mkdir -p /app/storage/framework/sessions",
    "mkdir -p /app/storage/framework/views",
    "chmod -R 777 /app/storage",  # Using 777 temporarily for debugging
    "chown -R www-data:www-data /app/storage /var/log",
]

[start]
cmd = '/assets/start.sh'

[staticAssets]
"start.sh" = '''
#!/bin/bash

# Transform the nginx configuration
node /assets/scripts/prestart.mjs /assets/nginx.template.conf /etc/nginx.conf

# Ensure directories exist with correct permissions at runtime
mkdir -p /run
mkdir -p /var/log
mkdir -p /app/storage/logs
mkdir -p /app/storage/framework/cache
mkdir -p /app/storage/framework/sessions
mkdir -p /app/storage/framework/views
chmod -R 777 /app/storage  # Using 777 temporarily for debugging
touch /app/storage/logs/laravel.log
chmod 666 /app/storage/logs/laravel.log
chown -R www-data:www-data /var/log /app/storage

# Find the Redis extension and create configuration file in the correct location
REDIS_PATH=$(find /nix/store -name "redis.so" | head -n 1)
mkdir -p /nix/store/a0qcy2m5mqwrlkr3xkza0n2wdmbq8myq-php-with-extensions-8.2.27/lib
echo "extension=$REDIS_PATH" > /nix/store/a0qcy2m5mqwrlkr3xkza0n2wdmbq8myq-php-with-extensions-8.2.27/lib/redis.ini
echo "Added Redis extension configuration at the correct location" > /var/log/redis-config.log

# Verify redis is now loaded
php -m | grep redis > /var/log/php-redis-check.log

# Start supervisor with direct extension loading as backup
supervisord -c /etc/supervisord.conf -n
'''

"supervisord.conf" = '''
[unix_http_server]
file=/assets/supervisor.sock

[supervisord]
logfile=/var/log/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/assets/supervisord.pid
nodaemon=false
silent=false
minfds=1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///assets/supervisor.sock

[include]
files = /etc/supervisor/conf.d/*.conf
'''

"worker-nginx.conf" = '''
[program:worker-nginx]
process_name=%(program_name)s_%(process_num)02d
command=nginx -c /etc/nginx.conf
autostart=true
autorestart=true
stdout_logfile=/var/log/worker-nginx.log
stderr_logfile=/var/log/worker-nginx.log
'''

"worker-phpfpm.conf" = '''
[program:worker-phpfpm]
process_name=%(program_name)s_%(process_num)02d
command=bash -c 'REDIS_PATH=$(find /nix/store -name "redis.so" | head -n 1); php-fpm -y /etc/php-fpm.conf -d "extension=$REDIS_PATH" -F'
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
stdout_logfile=/var/log/worker-phpfpm.log
stderr_logfile=/var/log/worker-phpfpm.log
'''

"worker-laravel.conf" = '''
[program:worker-laravel]
process_name=%(program_name)s_%(process_num)02d
command=bash -c 'REDIS_PATH=$(find /nix/store -name "redis.so" | head -n 1); exec php -d "extension=$REDIS_PATH" /app/artisan queue:work --sleep=3 --tries=3 --max-time=3600'
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
numprocs=12
startsecs=0
stopwaitsecs=3600
stdout_logfile=/var/log/worker-laravel.log
stderr_logfile=/var/log/worker-laravel.log
'''

"php-fpm.conf" = '''
[global]
pid = /run/php-fpm.pid
error_log = /var/log/php-fpm.log
daemonize = no

[www]
listen = 127.0.0.1:9000
user = www-data
group = www-data
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.max_children = 50
pm.start_servers = 5
pm.min_spare_servers = 4
pm.max_spare_servers = 32
clear_env = no

; PHP settings
php_admin_value[memory_limit] = 256M
php_admin_value[upload_max_filesize] = 30M
php_admin_value[post_max_size] = 35M

; Set proper paths
php_admin_value[error_log] = /var/log/php-fpm.error.log
php_admin_value[sys_temp_dir] = /tmp
php_admin_value[session.save_handler] = files
php_admin_value[session.save_path] = /tmp
'''

"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
    include    $!{nginx}/conf/mime.types;
    index    index.html index.htm index.php;

    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx-access.log;
    error_log /var/log/nginx-error.log debug;
    sendfile     on;
    tcp_nopush   on;
    server_names_hash_bucket_size 128;

    server {
        listen ${PORT};
        listen [::]:${PORT};
        server_name localhost;

        $if(NIXPACKS_PHP_ROOT_DIR) (
            root ${NIXPACKS_PHP_ROOT_DIR};
        ) else (
            root /app/public;
        )

        add_header X-Content-Type-Options "nosniff";
        client_max_body_size 35M;
        index index.php;
        charset utf-8;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        error_page 404 /index.php;

        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include $!{nginx}/conf/fastcgi_params;
            include $!{nginx}/conf/fastcgi.conf;
            fastcgi_intercept_errors on;
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
'''
